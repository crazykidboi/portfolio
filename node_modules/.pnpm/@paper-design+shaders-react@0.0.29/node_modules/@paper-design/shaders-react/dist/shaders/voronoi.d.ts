import { type GlobalParams, type ShaderMountProps } from '../shader-mount';
export type VoronoiParams = {
    scale?: number;
    colorCell1?: string;
    colorCell2?: string;
    colorCell3?: string;
    colorMid?: string;
    colorGradient?: number;
    distance?: number;
    edgesSize?: number;
    edgesSoftness?: number;
    middleSize?: number;
    middleSoftness?: number;
} & GlobalParams;
export type VoronoiProps = Omit<ShaderMountProps, 'fragmentShader'> & VoronoiParams;
type VoronoiPreset = {
    name: string;
    params: Required<VoronoiParams>;
    style?: React.CSSProperties;
};
export declare const defaultPreset: VoronoiPreset;
export declare const classicPreset: VoronoiPreset;
export declare const giraffePreset: VoronoiPreset;
export declare const eyesPreset: VoronoiPreset;
export declare const bubblesPreset: VoronoiPreset;
export declare const cellsPreset: VoronoiPreset;
export declare const glowPreset: VoronoiPreset;
export declare const tilesPreset: VoronoiPreset;
export declare const voronoiPresets: VoronoiPreset[];
export declare const Voronoi: ({ scale, colorCell1, colorCell2, colorCell3, colorMid, colorGradient, distance, edgesSize, edgesSoftness, middleSize, middleSoftness, ...props }: VoronoiProps) => React.ReactElement;
export {};

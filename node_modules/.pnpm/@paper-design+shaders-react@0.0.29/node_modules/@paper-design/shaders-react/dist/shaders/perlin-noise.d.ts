import { type GlobalParams, type ShaderMountProps } from '../shader-mount';
export type PerlinNoiseParams = {
    scale?: number;
    color?: string;
    proportion?: number;
    softness?: number;
    octaveCount?: number;
    persistence?: number;
    lacunarity?: number;
} & GlobalParams;
export type PerlinNoiseProps = Omit<ShaderMountProps, 'fragmentShader'> & PerlinNoiseParams;
type PerlinNoisePreset = {
    name: string;
    params: Required<PerlinNoiseParams>;
    style?: React.CSSProperties;
};
export declare const defaultPreset: PerlinNoisePreset;
export declare const nintendoWaterPreset: PerlinNoisePreset;
export declare const colonyPreset: PerlinNoisePreset;
export declare const phosphenesPreset: PerlinNoisePreset;
export declare const mossPreset: PerlinNoisePreset;
export declare const wormsPreset: PerlinNoisePreset;
export declare const perlinNoisePresets: PerlinNoisePreset[];
export declare const PerlinNoise: ({ scale, color, proportion, softness, octaveCount, persistence, lacunarity, ...props }: PerlinNoiseProps) => React.ReactElement;
export {};

import { type GlobalParams, type ShaderMountProps } from '../shader-mount';
export type GodRaysParams = {
    colorBack?: string;
    color1?: string;
    color2?: string;
    color3?: string;
    offsetX?: number;
    offsetY?: number;
    frequency?: number;
    spotty?: number;
    midIntensity?: number;
    midSize?: number;
    density?: number;
    blending?: number;
} & GlobalParams;
export type GodRaysProps = Omit<ShaderMountProps, 'fragmentShader'> & GodRaysParams;
type GodRaysPreset = {
    name: string;
    params: Required<GodRaysParams>;
    style?: React.CSSProperties;
};
export declare const defaultPreset: GodRaysPreset;
export declare const auroraPreset: GodRaysPreset;
export declare const warpPreset: GodRaysPreset;
export declare const linearPreset: GodRaysPreset;
export declare const etherPreset: GodRaysPreset;
export declare const godRaysPresets: GodRaysPreset[];
export declare const GodRays: ({ colorBack, color1, color2, color3, offsetX, offsetY, frequency, spotty, midIntensity, midSize, density, blending, ...props }: GodRaysProps) => React.ReactElement;
export {};
